(ns advent-2019.intcode-test
  (:require [clojure.test :refer [deftest testing is]]
            [advent-2019.intcode :refer [calc parse-instruction run]]))

(deftest intcode-tests
  (testing "instruction parsing"
    (is (= ["02" "000"] (parse-instruction 2)))
    (is (= ["01" "100"] (parse-instruction 101)))
    (is (= ["01" "001"] (parse-instruction 10001)))
    (is (= ["11" "000"] (parse-instruction 11)))
    (is (= ["03" "0"] (parse-instruction 3)))
    (is (= ["03" "0"] (parse-instruction "03")))
    (is (= ["03" "1"] (parse-instruction 103)))
    (is (= ["02" "101"] (parse-instruction 10102)))
    (is (= ["01" "111"] (parse-instruction 11101)))
    (is (= ["01" "010"] (parse-instruction 1001)))
    (is (= ["13" "000"] (parse-instruction 13))))

  (testing "Day 05 Opcodes"
    (is (= [1002 4 3 4 99] (first (calc [1002 4 3 4 33]))))
    (is (= [1101 100 -1 4 99] (first (calc [1101 100 -1 4 0]))))
    (is (= 999 (run [3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,
                     1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,
                     999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99] 7)))
    (is (= 1000 (run [3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,
                      1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,
                      999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99] 8)))
    (is (= 1001 (run [3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,
                      1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,
                      999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99] 9)))
    nil)

  (testing "Day05 Comparison Operators"
    (is (= 1 (run [3 9 8 9 10 9 4 9 99 -1 8] 8)))
    (is (= 0 (run [3 9 8 9 10 9 4 9 99 -1 8] 9)))
    (is (= 1 (run [3,3,1108,-1,8,3,4,3,99] 8)))
    (is (= 0 (run [3,3,1108,-1,8,3,4,3,99] 9)))
    (is (= 1 (run [3,3,1107,-1,8,3,4,3,99] 7)))
    (is (= 0 (run [3,3,1107,-1,8,3,4,3,99] 8)))
    (is (= 0 (run [3,3,1107,-1,8,3,4,3,99] 9)))
    nil)

  (testing "Day05 Jump test operations"
    (is (= 0 (run [3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9] 0)))
    (is (= 1 (run [3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9] 8)))
    (is (= 0 (run [3,3,1105,-1,9,1101,0,0,12,4,12,99,1] 0)))
    (is (= 1 (run [3,3,1105,-1,9,1101,0,0,12,4,12,99,1] 1)))
    (is (= 1 (run [3,3,1105,-1,9,1101,0,0,12,4,12,99,1] -1)))
    nil)

  (testing "Day 02 Opcodes"
    (is (= [2 0 0 0 99] (first (calc [1 0 0 0 99]))))
    (is (= [1 0 0 2 99] (first (calc [1 0 0 3 99]))))
    (is (= [2 3 0 6 99] (first (calc [2 3 0 3 99]))))
    (is (= [2 4 4 5 99 9801] (first (calc [2 4 4 5 99 0]))))))
